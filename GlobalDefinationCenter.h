#ifndef GLOBALDEFINATIONCENTER_H
#define GLOBALDEFINATIONCENTER_H

#define JDtoMJD          2400000.5
#define LIGHT_V          299792458                                    // Velocity of light
#define SEC_DAY          1.0 / 86400.0                                // Seconds in a day
#define PI               3.141592653589793
#define ToDEG            180 / PI                                     // Convert to Degrees
#define ToRAD            PI  / 180   /*0.017453 */                     // Convert to radians
#define OMEGAE_DOT       0.00007292115147
#define JD_J2000         2451545                                      // Julian day of J2000 system

/*........Earth equatorial radius in AU ( 6378.137 km / 149597870 km) */
const double ERADAU   =  4.2635212653763e-5;
const double D2R      =  0.0174532925199432957692369;                 // Degrees to radians.
const double DS2R     =  7.272205216643039903848712e-5;
const double DAS2R    =  4.848136811095359935899141e-6;               // Arcseconds to radians.
const double B1950    =  1949.9997904423;                             // Julian epoch of B1950.
const double AU_CONST =  1.49597870e11;                               // Astronomical Unit value (AU), in meters
/*................... Moon's mean longitude..........................*/
const double ELP0     =  270.434164;
const double ELP1     =  481267.8831;
const double ELP2     = -0.001133;
const double ELP3     =  0.0000019;
/*................... Sun's mean anomaly.............................*/
const double EM0      =  358.475833;
const double EM1      =  35999.0498;
const double EM2      = -0.000150;
const double EM3      = -0.0000033;
/*................... Moon's mean anomaly............................*/
const double EMP0     =  296.104608;
const double EMP1     =  477198.8491;
const double EMP2     =  0.009192;
const double EMP3     =  0.0000144;
/*...................Moon's mean elongation..........................*/
const double D0       =  350.737486;
const double D1       =  445267.1142;
const double D2       = -0.001436;
const double D3       =  0.0000019;
/*........Mean distance of the Moon from its ascending node..........*/
const double F0       =  11.250889;
const double F1       =  483202.0251;
const double F2       = -0.003211;
const double F3       = -0.0000003;
/*............Longitude of the Moon's ascending node.................*/
const double OM0      =  259.183275;
const double OM1      = -1934.1420;
const double OM2      =  0.002078;
const double OM3      =  0.0000022;
/*............Coefficients for (dimensionless) E factor...............*/
const double E1       = -0.002495;
const double E2       = -0.00000752;
/*............Coefficients for periodic variations, etc ..............*/
const double PAC      =  0.000233;
const double PA0      =  51.2;
const double PA1      =  20.2;
const double PBC      = -0.001778;
const double PCC      =  0.000817;
const double PDC      =  0.002011;
const double PEC      =  0.003964;
const double PE0      =  346.560;
const double PE1      =  132.870;
const double PE2      = -0.0091731;
const double PFC      =  0.001964;
const double PGC      =  0.002541;
const double PHC      =  0.001964;
const double cPIC     = -0.024691;
const double PJC      = -0.004328;
const double PJ0      =  275.05;
const double PJ1      = -2.30;
const double CW1      =  0.0004664;
const double CW2      =  0.0000754;

/*
 * Coefficients for Moon position
 * Tx(N): coefficient of L, B or P term (deg)
 * ITx(N,0-4): coefficients of M, M', D, F, E**n in argument
*/

const double H20      =  0.6078;
const double L20      =  0.0847;
const double H3       =  0.292;
const double L3       =  0.015;
const double GM       =  3.986004415e14;
const double GMS      =  1.3271250e20;
const double GMM      =  4.9027890e12;
const double AE       =  6378.137e3;




//const double      TL    [50] =  {+6.288750, +1.274018, +0.658309, +0.213616, -0.185596,
//                                 -0.114336, +0.058793, +0.057212, +0.053320, +0.045874,
//                                 +0.041024, -0.034718, -0.030465, +0.015326, -0.012528,
//                                 -0.010980, +0.010674, +0.010034, +0.008548, -0.007910,
//                                 -0.006783, +0.005162, +0.005000, +0.004049, +0.003996,
//                                 +0.003862, +0.003665, +0.002695, +0.002602, +0.002396,
//                                 -0.002349, +0.002249, -0.002125, -0.002079, +0.002059,
//                                 -0.001773, -0.001595, +0.001220, -0.001110, +0.000892,
//                                 -0.000811, +0.000761, +0.000717, +0.000704, +0.000693,
//                                 +0.000598, +0.000550, +0.000538, +0.000521, +0.000486};

//const double      TB    [45] =  {+5.128189, +0.280606, +0.277693, +0.173238, +0.055413,
//                                 +0.046272, +0.032573, +0.017198, +0.009267, +0.008823,
//                                 +0.008247, +0.004323, +0.004200, +0.003372, +0.002472,
//                                 +0.002222, +0.002072, +0.001877, +0.001828, -0.001803,
//                                 -0.001750, +0.001570, -0.001487, -0.001481, +0.001417,
//                                 +0.001350, +0.001330, +0.001106, +0.001020, +0.000833,
//                                 +0.000781, +0.000670, +0.000606, +0.000597, +0.000492,
//                                 +0.000450, +0.000439, +0.000423, +0.000422, -0.000367,
//                                 -0.000353, +0.000331, +0.000317, +0.000306, -0.000283};

//const double      TP    [31] =  {+0.950724, +0.051818, +0.009531, +0.007843, +0.002824,
//                                 +0.000857, +0.000533, +0.000401, +0.000320, -0.000271,
//                                 -0.000264, -0.000198, +0.000173, +0.000167, -0.000111,
//                                 +0.000103, -0.000084, -0.000083, +0.000079, +0.000072,
//                                 +0.000064, -0.000063, +0.000041, +0.000035, -0.000033,
//                                 -0.000030, -0.000029, -0.000029, +0.000026, -0.000023,
//                                 +0.000019};

//const int         ITL[5][50] = {
//{ 0, 0, 0, 0, 1, 0, 0,-1, 0,-1,  -1, 0, 1, 0, 0, 0, 0, 0, 0, 1,   1, 0, 1,-1, 0, 0, 0 -1, 0,-1,   0,-2, 1, 2,-2, 0, 0,-1, 0, 0,   1,-1,-2,-2, 1,-1, 0, 0,-1, 0},
//{ 1,-1, 0, 2, 0, 0,-2,-1, 1, 0,   1, 0, 1, 0, 1,-1,-1, 3,-2,-1,   0, 1, 0, 1, 2, 0,-3, 2, 1,-2,   1, 0, 2, 0,-1, 1, 0,-1, 2, 1,   1,-2, 1, 1,-2, 0, 1, 4, 0, 2},
//{ 0, 2, 2, 0, 0, 0, 2, 2, 2, 2,   0, 1, 0, 2, 0, 0, 4, 0, 4, 2,   2,-1, 1, 2, 2, 4, 2, 0,-2, 2,   1, 2, 0, 0, 2, 2, 2, 4, 0,-3,   2, 4, 0,-2 ,2, 2, 4, 0, 4,-1},
//{ 0, 0, 0, 0, 0, 2, 0, 0, 0, 0,   0, 0, 0,-2, 2, 2, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 0, 0,-2, 0,   0, 0, 0, 0, 0,-2, 2, 0, 2, 0,   0, 0, 0, 0, 0,-2, 0, 0, 0, 0},
//{ 0, 0, 0, 0, 1, 0, 0, 1, 0, 1,   1, 0, 1, 0, 0, 0, 0, 0, 0, 1,   1, 0, 1, 1, 0, 0, 0, 1, 0, 1,   0, 2, 1, 2, 2, 0, 0, 1, 0, 0,   1, 1, 2, 2, 1, 1, 0, 0, 1, 0}};

//const int         ITB[5][45] = {
//{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,  -1, 0, 0,-1,-1,-1,-1,-1, 0, 1,   0,-1, 0, 1,-1,-1, 0, 0, 0, 0,   0, 0, 0, 0,-1, 0, 0, 0, 0, 1,   1, 0,-1,-2, 0},
//{ 0, 1, 1, 0,-1,-1, 0, 2, 1, 2,   0,-2, 1, 0,-1, 0,-1, 1,-1, 0,   0, 1, 0, 1,-1, 0, 0, 3, 0,-1,   1,-2, 0, 2, 1, 2, 3, 2,-3,-1,   0, 0, 1, 0, 1},
//{ 0, 0, 0, 2, 2, 2, 2, 0, 2, 0,   2, 2, 2,-2, 2, 2, 2, 0, 4, 0,   0, 0, 1, 0, 0, 0,-1, 0, 4, 4,   0, 4, 2, 2, 2,-2, 0, 2, 2, 2,   2, 4, 2, 2, 0},
//{ 1, 1,-1,-1, 1,-1, 1, 1,-1,-1,  -1,-1, 1, 1, 1, 1,-1, 1,-1, 1,   3,-1, 1, 1, 1, 1, 1, 1,-1, 1,  -3, 1,-3,-1,-1,-1,-1, 1,-1, 1,   1, 1, 1,-1, 3},
//{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   1, 0, 0, 1, 1, 1, 1, 1, 0, 1,   0, 1, 0, 1, 1, 1, 0, 0, 0, 0,   0, 0, 0, 0, 1, 0, 0, 0, 0, 1,   1 ,0, 1, 2, 0}};

//const int         ITP[5][31] = {
//{ 0, 0, 0, 0, 0, 0,-1,-1,-1, 0,   1, 0, 0, 0, 1, 0, 0, 1, 0, 0,  -1, 1, 1,-1, 0, 0, 0, 1,-2, 0,  -1},
//{ 0, 1,-1, 0, 2, 1, 0,-1, 1, 0,   1,-1, 3,-1, 0,-2, 2, 0, 2, 0,   1,-1, 0, 2, 3, 1, 0, 2, 0, 1,  -1},
//{ 0, 0, 2, 2, 0, 2, 2, 2, 0, 1,   0, 0, 0, 4, 0, 4,-2, 2, 2, 4,   2, 2, 1, 0,-2, 1,-2, 0, 2,-2,   4},
//{ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,   0, 2, 0, 0, 0, 0, 0, 0, 0, 0,   0, 0, 0, 0, 0, 0, 2, 0, 0, 2,   0},
//{ 0, 0, 0, 0, 0, 0, 1, 1, 1, 0,   1, 0, 0, 0, 1, 0, 0, 1, 0, 0,   1, 1, 1, 1, 0, 0, 0, 1, 2, 0,   1}};


#endif // GLOBALDEFINATIONCENTER_H


